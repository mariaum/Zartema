From 768c2aebbe97c8954f5d544903664abf68af51cc Mon Sep 17 00:00:00 2001
From: mariaum <me@mariaum.com>
Date: Tue, 25 Mar 2025 01:59:13 -0300
Subject: [PATCH] Flush less, write more


diff --git a/api/src/main/java/net/md_5/bungee/api/connection/Connection.java b/api/src/main/java/net/md_5/bungee/api/connection/Connection.java
index 392490d1..8881e12e 100644
--- a/api/src/main/java/net/md_5/bungee/api/connection/Connection.java
+++ b/api/src/main/java/net/md_5/bungee/api/connection/Connection.java
@@ -94,5 +94,7 @@ public interface Connection
          * @throws UnsupportedOperationException if used for a PendingConnection
          */
         void sendPacketQueued(DefinedPacket packet);
+
+        void sendPacketDelayed(DefinedPacket packet); // Zartema
     }
 }
diff --git a/proxy/src/main/java/net/md_5/bungee/ServerConnection.java b/proxy/src/main/java/net/md_5/bungee/ServerConnection.java
index a5a3c61a..79a334c2 100644
--- a/proxy/src/main/java/net/md_5/bungee/ServerConnection.java
+++ b/proxy/src/main/java/net/md_5/bungee/ServerConnection.java
@@ -53,6 +53,14 @@ public class ServerConnection implements Server
                 sendPacket( packet );
             }
         }
+
+        // Zartema start
+        @Override
+        public void sendPacketDelayed(final DefinedPacket packet)
+        {
+            ch.write( packet, false );
+        }
+        // Zartema end
     };
 
     public void sendPacketQueued(DefinedPacket packet)
diff --git a/proxy/src/main/java/net/md_5/bungee/UserConnection.java b/proxy/src/main/java/net/md_5/bungee/UserConnection.java
index 94c4c528..8629a6ac 100644
--- a/proxy/src/main/java/net/md_5/bungee/UserConnection.java
+++ b/proxy/src/main/java/net/md_5/bungee/UserConnection.java
@@ -186,6 +186,14 @@ public final class UserConnection implements ProxiedPlayer
                 sendPacket( packet );
             }
         }
+
+        // Zartema start
+        @Override
+        public void sendPacketDelayed(final DefinedPacket packet)
+        {
+            ch.write( packet, false );
+        }
+        // Zartema end
     };
 
     public boolean init()
diff --git a/proxy/src/main/java/net/md_5/bungee/connection/DownstreamBridge.java b/proxy/src/main/java/net/md_5/bungee/connection/DownstreamBridge.java
index 3183be34..5255496f 100644
--- a/proxy/src/main/java/net/md_5/bungee/connection/DownstreamBridge.java
+++ b/proxy/src/main/java/net/md_5/bungee/connection/DownstreamBridge.java
@@ -94,6 +94,8 @@ public class DownstreamBridge extends PacketHandler
     private final ServerConnection server;
     private boolean receivedLogin;
 
+    private int pendingFlush; // Zartema
+
     @Override
     public void exception(Throwable t) throws Exception
     {
@@ -164,7 +166,7 @@ public class DownstreamBridge extends PacketHandler
         {
             rewrite.rewriteClientbound( packet.buf, con.getServerEntityId(), con.getClientEntityId(), con.getPendingConnection().getVersion() );
         }
-        con.sendPacket( packet );
+        sendPacketDelayed( packet ); // Zartema
     }
 
     @Override
@@ -357,7 +359,7 @@ public class DownstreamBridge extends PacketHandler
             }
             // Travertine end
             // changes in the packet are ignored so we need to send it manually
-            con.unsafe().sendPacket( pluginMessage );
+            sendPacketDelayed( pluginMessage ); // Zartema
             throw CancelSendSignal.INSTANCE;
         }
 
@@ -758,7 +760,7 @@ public class DownstreamBridge extends PacketHandler
                 }
             }
 
-            con.unsafe().sendPacket( tabCompleteResponse );
+            sendPacketDelayed( tabCompleteResponse ); // Zartema
         }
 
         throw CancelSendSignal.INSTANCE;
@@ -851,7 +853,7 @@ public class DownstreamBridge extends PacketHandler
 
         if ( modified )
         {
-            con.unsafe().sendPacket( commands );
+            sendPacketDelayed( commands ); // Zartema
             throw CancelSendSignal.INSTANCE;
         }
     }
@@ -915,4 +917,20 @@ public class DownstreamBridge extends PacketHandler
     {
         return "[" + con.getAddress() + "|" + con.getName() + "] <-> DownstreamBridge <-> [" + server.getInfo().getName() + "]";
     }
+
+    // Zartema start
+    public void sendPacketDelayed( Object packet ) {
+        this.con.getCh().write( packet, false );
+        if ( ++this.pendingFlush >= 8192 ) {
+            this.con.getCh().flush();
+            this.pendingFlush = 0;
+        }
+    }
+
+    @Override
+    public void readComplete( final ChannelWrapper channel ) throws Exception {
+        this.con.getCh().flush();
+        this.pendingFlush = 0;
+    }
+    // Zartema end
 }
diff --git a/proxy/src/main/java/net/md_5/bungee/connection/InitialHandler.java b/proxy/src/main/java/net/md_5/bungee/connection/InitialHandler.java
index d061bdcf..701a329c 100644
--- a/proxy/src/main/java/net/md_5/bungee/connection/InitialHandler.java
+++ b/proxy/src/main/java/net/md_5/bungee/connection/InitialHandler.java
@@ -137,6 +137,14 @@ public class InitialHandler extends PacketHandler implements PendingConnection
         {
             throw new UnsupportedOperationException( "Not supported" );
         }
+
+        // Zartema start
+        @Override
+        public void sendPacketDelayed(final DefinedPacket packet)
+        {
+            ch.write( packet, false );
+        }
+        // Zartema end
     };
     @Getter
     private boolean onlineMode = BungeeCord.getInstance().config.isOnlineMode();
diff --git a/proxy/src/main/java/net/md_5/bungee/netty/ChannelWrapper.java b/proxy/src/main/java/net/md_5/bungee/netty/ChannelWrapper.java
index 7abe0a29..822b22f3 100644
--- a/proxy/src/main/java/net/md_5/bungee/netty/ChannelWrapper.java
+++ b/proxy/src/main/java/net/md_5/bungee/netty/ChannelWrapper.java
@@ -85,7 +85,9 @@ public class ChannelWrapper
         return getMinecraftEncoder().getProtocolVersion();
     }
 
-    public void write(Object packet)
+    public void write(Object packet) { write(packet, true); } // Zartema
+
+    public void write(Object packet, boolean flush) // Zartema
     {
         if ( !closed )
         {
@@ -94,11 +96,19 @@ public class ChannelWrapper
             {
                 PacketWrapper wrapper = (PacketWrapper) packet;
                 wrapper.setReleased( true );
-                ch.writeAndFlush( wrapper.buf, ch.voidPromise() );
+                if ( flush ) { // Zartema
+                    ch.writeAndFlush( wrapper.buf, ch.voidPromise() );
+                } else {
+                    ch.write( wrapper.buf, ch.voidPromise() );
+                }
                 defined = wrapper.packet;
             } else
             {
-                ch.writeAndFlush( packet, ch.voidPromise() );
+                if ( flush ) { // Zartema
+                    ch.writeAndFlush( packet, ch.voidPromise() );
+                } else {
+                    ch.write( packet, ch.voidPromise() );
+                }
                 if ( packet instanceof DefinedPacket )
                 {
                     defined = (DefinedPacket) packet;
@@ -116,6 +126,8 @@ public class ChannelWrapper
         }
     }
 
+    public void flush() { this.ch.flush(); } // Zartema
+
     public void markClosed()
     {
         closed = closing = true;
diff --git a/proxy/src/main/java/net/md_5/bungee/netty/HandlerBoss.java b/proxy/src/main/java/net/md_5/bungee/netty/HandlerBoss.java
index 925cc346..c336f1b3 100644
--- a/proxy/src/main/java/net/md_5/bungee/netty/HandlerBoss.java
+++ b/proxy/src/main/java/net/md_5/bungee/netty/HandlerBoss.java
@@ -244,4 +244,13 @@ public class HandlerBoss extends ChannelInboundHandlerAdapter
             ctx.close();
         }
     }
+
+    // Zartema start
+    @Override
+    public void channelReadComplete(final ChannelHandlerContext ctx) throws Exception {
+        if ( handler != null ) {
+            handler.readComplete( channel );
+        }
+    }
+    // Zartema end
 }
diff --git a/proxy/src/main/java/net/md_5/bungee/netty/PacketHandler.java b/proxy/src/main/java/net/md_5/bungee/netty/PacketHandler.java
index 7bd223d9..88abd2c6 100644
--- a/proxy/src/main/java/net/md_5/bungee/netty/PacketHandler.java
+++ b/proxy/src/main/java/net/md_5/bungee/netty/PacketHandler.java
@@ -32,4 +32,10 @@ public abstract class PacketHandler extends net.md_5.bungee.protocol.AbstractPac
     public void writabilityChanged(ChannelWrapper channel) throws Exception
     {
     }
+
+    // Zartema start
+    public void readComplete(ChannelWrapper channel) throws Exception
+    {
+    }
+    // Zartema end
 }
diff --git a/proxy/src/main/java/net/md_5/bungee/tab/ServerUnique.java b/proxy/src/main/java/net/md_5/bungee/tab/ServerUnique.java
index 78b2c2a8..4a562b95 100644
--- a/proxy/src/main/java/net/md_5/bungee/tab/ServerUnique.java
+++ b/proxy/src/main/java/net/md_5/bungee/tab/ServerUnique.java
@@ -49,7 +49,7 @@ public class ServerUnique extends TabList
                 // Travertine end
             }
         }
-        player.unsafe().sendPacket( playerListItem );
+        player.unsafe().sendPacketDelayed( playerListItem );
     }
 
     @Override
@@ -59,7 +59,7 @@ public class ServerUnique extends TabList
         {
             uuids.remove( uuid );
         }
-        player.unsafe().sendPacket( playerListItem );
+        player.unsafe().sendPacketDelayed( playerListItem );
     }
 
     @Override
@@ -75,7 +75,7 @@ public class ServerUnique extends TabList
                 }
             }
         }
-        player.unsafe().sendPacket( playerListItem );
+        player.unsafe().sendPacketDelayed( playerListItem );
     }
 
     @Override
@@ -114,7 +114,7 @@ public class ServerUnique extends TabList
             // Travertine start
             if ( ProtocolConstants.isAfterOrEq( player.getPendingConnection().getVersion(), ProtocolConstants.MINECRAFT_1_8 ) )
             {
-                player.unsafe().sendPacket( packet );
+                player.unsafe().sendPacketDelayed( packet );
             } else
             {
                 // Split up the packet
@@ -127,7 +127,7 @@ public class ServerUnique extends TabList
                             {
                                     item
                             } );
-                    player.unsafe().sendPacket( p2 );
+                    player.unsafe().sendPacketDelayed( p2 );
                 }
             }
             // Travertine end
-- 
2.34.1

