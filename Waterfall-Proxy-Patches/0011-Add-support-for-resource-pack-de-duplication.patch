From 655445f3d2bde61d2e3bd3fbe7b7ee4859cd6c34 Mon Sep 17 00:00:00 2001
From: mariaum <me@mariaum.com>
Date: Mon, 29 Apr 2024 03:48:33 -0300
Subject: [PATCH] Add support for resource pack de-duplication.

This adds support for de-duplicating resource packs for version 1.20.3+.

diff --git a/protocol/src/main/java/net/md_5/bungee/protocol/AbstractPacketHandler.java b/protocol/src/main/java/net/md_5/bungee/protocol/AbstractPacketHandler.java
index 48048202..5270a2d6 100644
--- a/protocol/src/main/java/net/md_5/bungee/protocol/AbstractPacketHandler.java
+++ b/protocol/src/main/java/net/md_5/bungee/protocol/AbstractPacketHandler.java
@@ -59,6 +59,9 @@ import net.md_5.bungee.protocol.packet.TitleTimes;
 import net.md_5.bungee.protocol.packet.Transfer;
 import net.md_5.bungee.protocol.packet.UnsignedClientCommand;
 import net.md_5.bungee.protocol.packet.ViewDistance;
+import net.md_5.bungee.protocol.packet.PushResourcePack;
+import net.md_5.bungee.protocol.packet.PopResourcePack;
+import net.md_5.bungee.protocol.packet.ResourcePack;
 
 public abstract class AbstractPacketHandler
 {
@@ -312,4 +315,14 @@ public abstract class AbstractPacketHandler
     {
     }
     // Waterfall end
+
+    public void handle(PushResourcePack packet) throws Exception {
+    }
+
+    public void handle(PopResourcePack packet) throws Exception {
+    }
+
+    public void handle(ResourcePack packet) throws Exception {
+    }
+
 }
diff --git a/protocol/src/main/java/net/md_5/bungee/protocol/Protocol.java b/protocol/src/main/java/net/md_5/bungee/protocol/Protocol.java
index 4172f257..d306dfff 100644
--- a/protocol/src/main/java/net/md_5/bungee/protocol/Protocol.java
+++ b/protocol/src/main/java/net/md_5/bungee/protocol/Protocol.java
@@ -66,6 +66,9 @@ import net.md_5.bungee.protocol.packet.TitleTimes;
 import net.md_5.bungee.protocol.packet.Transfer;
 import net.md_5.bungee.protocol.packet.UnsignedClientCommand;
 import net.md_5.bungee.protocol.packet.ViewDistance;
+import net.md_5.bungee.protocol.packet.PushResourcePack;
+import net.md_5.bungee.protocol.packet.PopResourcePack;
+import net.md_5.bungee.protocol.packet.ResourcePack;
 
 public enum Protocol
 {
@@ -733,6 +736,33 @@ public enum Protocol
                     CustomClickAction::new,
                     map( ProtocolConstants.MINECRAFT_1_21_6, 0x41 )
             );
+            // Zartema start
+            TO_CLIENT.registerPacket(
+                    PushResourcePack.class,
+                    PushResourcePack::new,
+                    map(ProtocolConstants.MINECRAFT_1_20_3, 0x44),
+                    map(ProtocolConstants.MINECRAFT_1_20_5, 0x46),
+                    map(ProtocolConstants.MINECRAFT_1_21_2, 0x4B),
+                    map(ProtocolConstants.MINECRAFT_1_21_5, 0x4A)
+            );
+            TO_CLIENT.registerPacket(
+                    PopResourcePack.class,
+                    PopResourcePack::new,
+                    map(ProtocolConstants.MINECRAFT_1_20_3, 0x43),
+                    map(ProtocolConstants.MINECRAFT_1_20_5, 0x45),
+                    map(ProtocolConstants.MINECRAFT_1_21_2, 0x4A),
+                    map(ProtocolConstants.MINECRAFT_1_21_5, 0x49)
+            );
+            TO_SERVER.registerPacket(
+                    ResourcePack.class,
+                    ResourcePack::new,
+                    map(ProtocolConstants.MINECRAFT_1_20_3, 0x28),
+                    map(ProtocolConstants.MINECRAFT_1_20_5, 0x2B),
+                    map(ProtocolConstants.MINECRAFT_1_21_2, 0x2D),
+                    map(ProtocolConstants.MINECRAFT_1_21_4, 0x2F),
+                    map(ProtocolConstants.MINECRAFT_1_21_6, 0x30)
+            );
+            // Zartema end
         }
     },
     // 1
@@ -926,6 +956,26 @@ public enum Protocol
                     CustomClickAction::new,
                     map( ProtocolConstants.MINECRAFT_1_21_6, 0x08 )
             );
+            // Zartema start
+            TO_CLIENT.registerPacket(
+                    PushResourcePack.class,
+                    PushResourcePack::new,
+                    map(ProtocolConstants.MINECRAFT_1_20_3, 0x07),
+                    map(ProtocolConstants.MINECRAFT_1_20_5, 0x09)
+            );
+            TO_CLIENT.registerPacket(
+                    PopResourcePack.class,
+                    PopResourcePack::new,
+                    map(ProtocolConstants.MINECRAFT_1_20_3, 0x06),
+                    map(ProtocolConstants.MINECRAFT_1_20_5, 0x08)
+            );
+            TO_SERVER.registerPacket(
+                    ResourcePack.class,
+                    ResourcePack::new,
+                    map(ProtocolConstants.MINECRAFT_1_20_3, 0x05),
+                    map(ProtocolConstants.MINECRAFT_1_20_5, 0x06)
+            );
+            // Zartema end
         }
     };
     /*========================================================================*/
diff --git a/protocol/src/main/java/net/md_5/bungee/protocol/packet/PopResourcePack.java b/protocol/src/main/java/net/md_5/bungee/protocol/packet/PopResourcePack.java
new file mode 100644
index 00000000..e400e56f
--- /dev/null
+++ b/protocol/src/main/java/net/md_5/bungee/protocol/packet/PopResourcePack.java
@@ -0,0 +1,45 @@
+package net.md_5.bungee.protocol.packet;
+
+import io.netty.buffer.ByteBuf;
+import lombok.AllArgsConstructor;
+import lombok.Data;
+import lombok.EqualsAndHashCode;
+import lombok.NoArgsConstructor;
+import net.md_5.bungee.protocol.AbstractPacketHandler;
+import net.md_5.bungee.protocol.DefinedPacket;
+import net.md_5.bungee.protocol.ProtocolConstants;
+
+import java.util.UUID;
+
+/**
+ * Written by mariaum <mariaumhere@gmail.com>, 29 Apr 2024
+ */
+@Data
+@AllArgsConstructor
+@NoArgsConstructor
+@EqualsAndHashCode(callSuper = false)
+public class PopResourcePack extends DefinedPacket {
+
+    private UUID uuid;
+
+    @Override
+    public void write(ByteBuf buf, ProtocolConstants.Direction direction, int protocolVersion) {
+        buf.writeBoolean(this.uuid != null);
+        if (this.uuid != null) {
+            writeUUID(this.uuid, buf);
+        }
+    }
+
+    @Override
+    public void read(ByteBuf buf, ProtocolConstants.Direction direction, int protocolVersion) {
+        if (buf.readBoolean()) {
+            this.uuid = readUUID(buf);
+        }
+    }
+
+    @Override
+    public void handle(AbstractPacketHandler handler) throws Exception {
+        handler.handle(this);
+    }
+
+}
diff --git a/protocol/src/main/java/net/md_5/bungee/protocol/packet/PushResourcePack.java b/protocol/src/main/java/net/md_5/bungee/protocol/packet/PushResourcePack.java
new file mode 100644
index 00000000..d58ea5b1
--- /dev/null
+++ b/protocol/src/main/java/net/md_5/bungee/protocol/packet/PushResourcePack.java
@@ -0,0 +1,58 @@
+package net.md_5.bungee.protocol.packet;
+
+import io.netty.buffer.ByteBuf;
+import lombok.AllArgsConstructor;
+import lombok.Data;
+import lombok.EqualsAndHashCode;
+import lombok.NoArgsConstructor;
+import net.md_5.bungee.api.chat.BaseComponent;
+import net.md_5.bungee.protocol.AbstractPacketHandler;
+import net.md_5.bungee.protocol.DefinedPacket;
+import net.md_5.bungee.protocol.ProtocolConstants;
+
+import java.util.UUID;
+
+/**
+ * Written by mariaum <mariaumhere@gmail.com>, 29 Apr 2024
+ */
+@Data
+@AllArgsConstructor
+@NoArgsConstructor
+@EqualsAndHashCode(callSuper = false)
+public class PushResourcePack extends DefinedPacket {
+
+    private UUID uuid;
+    private String url;
+    private String hash;
+    private boolean required;
+    private BaseComponent prompt;
+
+    @Override
+    public void write(ByteBuf buf, ProtocolConstants.Direction direction, int protocolVersion) {
+        writeUUID(this.uuid, buf);
+        writeString(this.url, buf);
+        writeString(this.hash, buf);
+        buf.writeBoolean(this.required);
+        buf.writeBoolean(this.prompt != null);
+        if (this.prompt != null) {
+            writeBaseComponent(this.prompt, buf, protocolVersion);
+        }
+    }
+
+    @Override
+    public void read(ByteBuf buf, ProtocolConstants.Direction direction, int protocolVersion) {
+        this.uuid = readUUID(buf);
+        this.url = readString(buf);
+        this.hash = readString(buf);
+        this.required = buf.readBoolean();
+        if (buf.readBoolean()) {
+            this.prompt = readBaseComponent(buf, protocolVersion);
+        }
+    }
+
+    @Override
+    public void handle(AbstractPacketHandler handler) throws Exception {
+        handler.handle(this);
+    }
+
+}
diff --git a/protocol/src/main/java/net/md_5/bungee/protocol/packet/ResourcePack.java b/protocol/src/main/java/net/md_5/bungee/protocol/packet/ResourcePack.java
new file mode 100644
index 00000000..f499a6fa
--- /dev/null
+++ b/protocol/src/main/java/net/md_5/bungee/protocol/packet/ResourcePack.java
@@ -0,0 +1,43 @@
+package net.md_5.bungee.protocol.packet;
+
+import io.netty.buffer.ByteBuf;
+import lombok.AllArgsConstructor;
+import lombok.Data;
+import lombok.EqualsAndHashCode;
+import lombok.NoArgsConstructor;
+import net.md_5.bungee.protocol.AbstractPacketHandler;
+import net.md_5.bungee.protocol.DefinedPacket;
+import net.md_5.bungee.protocol.ProtocolConstants;
+
+import java.util.UUID;
+
+/**
+ * Written by mariaum <mariaumhere@gmail.com>, 29 Apr 2024
+ */
+@Data
+@AllArgsConstructor
+@NoArgsConstructor
+@EqualsAndHashCode(callSuper = false)
+public class ResourcePack extends DefinedPacket {
+
+    private UUID uuid;
+    private int action;
+
+    @Override
+    public void write(ByteBuf buf, ProtocolConstants.Direction direction, int protocolVersion) {
+        writeUUID(this.uuid, buf);
+        writeVarInt(this.action, buf);
+    }
+
+    @Override
+    public void read(ByteBuf buf, ProtocolConstants.Direction direction, int protocolVersion) {
+        this.uuid = readUUID(buf);
+        this.action = readVarInt(buf);
+    }
+
+    @Override
+    public void handle(AbstractPacketHandler handler) throws Exception {
+        handler.handle(this);
+    }
+
+}
diff --git a/proxy/src/main/java/net/md_5/bungee/UserConnection.java b/proxy/src/main/java/net/md_5/bungee/UserConnection.java
index 257f4e4a..94c4c528 100644
--- a/proxy/src/main/java/net/md_5/bungee/UserConnection.java
+++ b/proxy/src/main/java/net/md_5/bungee/UserConnection.java
@@ -148,6 +148,8 @@ public final class UserConnection implements ProxiedPlayer
     @Getter
     @Setter
     private String lastCommandTabbed;
+    @Getter
+    private final HashSet<UUID> pushedPacks = new HashSet<>();
     /*========================================================================*/
     @Getter
     private String displayName;
diff --git a/proxy/src/main/java/net/md_5/bungee/connection/DownstreamBridge.java b/proxy/src/main/java/net/md_5/bungee/connection/DownstreamBridge.java
index 20baa1e5..8c42e69e 100644
--- a/proxy/src/main/java/net/md_5/bungee/connection/DownstreamBridge.java
+++ b/proxy/src/main/java/net/md_5/bungee/connection/DownstreamBridge.java
@@ -74,6 +74,9 @@ import net.md_5.bungee.protocol.packet.ServerData;
 import net.md_5.bungee.protocol.packet.SetCompression;
 import net.md_5.bungee.protocol.packet.TabCompleteResponse;
 import net.md_5.bungee.tab.TabList;
+import net.md_5.bungee.protocol.packet.PushResourcePack;
+import net.md_5.bungee.protocol.packet.PopResourcePack;
+import net.md_5.bungee.protocol.packet.ResourcePack;
 
 @RequiredArgsConstructor
 public class DownstreamBridge extends PacketHandler
@@ -886,6 +889,23 @@ public class DownstreamBridge extends PacketHandler
         con.toggleBundling();
     }
 
+    @Override
+    public void handle(PushResourcePack packet) throws Exception {
+        if (this.con.getPushedPacks().contains(packet.getUuid())) {
+            this.server.sendPacketQueued(new ResourcePack(packet.getUuid(), 0));
+            throw CancelSendSignal.INSTANCE;
+        }
+    }
+
+    @Override
+    public void handle(PopResourcePack packet) throws Exception {
+        if (packet.getUuid() != null) {
+            this.con.getPushedPacks().remove(packet.getUuid());
+        } else {
+            this.con.getPushedPacks().clear();
+        }
+    }
+
     @Override
     public String toString()
     {
diff --git a/proxy/src/main/java/net/md_5/bungee/connection/UpstreamBridge.java b/proxy/src/main/java/net/md_5/bungee/connection/UpstreamBridge.java
index f652b672..03ac1551 100644
--- a/proxy/src/main/java/net/md_5/bungee/connection/UpstreamBridge.java
+++ b/proxy/src/main/java/net/md_5/bungee/connection/UpstreamBridge.java
@@ -46,6 +46,7 @@ import net.md_5.bungee.protocol.packet.StartConfiguration;
 import net.md_5.bungee.protocol.packet.TabCompleteRequest;
 import net.md_5.bungee.protocol.packet.TabCompleteResponse;
 import net.md_5.bungee.protocol.packet.UnsignedClientCommand;
+import net.md_5.bungee.protocol.packet.ResourcePack;
 import net.md_5.bungee.util.AllowedCharacters;
 
 public class UpstreamBridge extends PacketHandler
@@ -454,6 +455,13 @@ public class UpstreamBridge extends PacketHandler
         }
     }
 
+    @Override
+    public void handle(ResourcePack packet) throws Exception {
+        if (packet.getAction() == 0) { // SUCCESSFULLY_LOADED
+            con.getPushedPacks().add(packet.getUuid());
+        }
+    }
+
     @Override
     public String toString()
     {
-- 
2.51.0.windows.1

